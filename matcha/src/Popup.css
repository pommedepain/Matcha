/*
	POPUP WINDOW BASICS
*/

.popup {  
	position: fixed;  
	width: 100%;  
	height: 100%;  
	top: 0;  
	left: 0;  
	right: 0;  
	bottom: 0;  
	margin: auto;
	z-index: 2;
	/* background-color: rgba(0,0,0, 0.5);  */
}

.popup_inner {  
	position: absolute;  
	left: 25%;  
	right: 25%;  
	top: 25%;  
	bottom: 25%;  
	margin: auto;  
	border-radius: 20px;  
	/* background: white;   */
	color:black;
}

/* h3 subquestions */
.questions {
	font-size: 0.7em;
	position: relative;
	/* text-align: left; */
	margin-bottom: 2%;
	margin-top: 4%;
}

/* 
	CLOSE BUTTON
*/

.close {
	position: relative;
	left: -40%;
	display: inline-block;
	width: 40px;
	height: 40px;
	overflow: hidden;
	background: none;
	border: none;
}
.close:focus {
	outline: 0;
}
.close:hover::before, .close:hover::after {
	background: rgb(204, 76, 76);
}
.close::before, .close::after {
	content: '';
	position: absolute;
	height: 2px;
	width: 100%;
	top: 50%;
	left: 0;
	margin-top: -1px;
	background: #000;
}
.close::before {
	-webkit-transform: rotate(45deg);
	-moz-transform: rotate(45deg);
	-ms-transform: rotate(45deg);
	-o-transform: rotate(45deg);
	transform: rotate(45deg);
}
.close::after {
	-webkit-transform: rotate(-45deg);
	-moz-transform: rotate(-45deg);
	-ms-transform: rotate(-45deg);
	-o-transform: rotate(-45deg);
	transform: rotate(-45deg);
}
.close.heavy::before, .close.heavy::after {
	height: 12px;
	margin-top: -6px;
}
.close.rounded::before, .close.rounded::after {
	border-radius: 5px;
}

/*custom font*/
@import url(https://fonts.googleapis.com/css?family=Montserrat);

html {
	height: 100%;
	/*Image only BG fallback*/
	
	/*background = gradient + image pattern combo*/
	background: 
		linear-gradient(rgba(196, 102, 0, 0.6), rgba(155, 89, 182, 0.6));
}

/*
	FORM STYLES
*/
#msform {
	width: 100%;
	margin: 0 auto;
	text-align: center;
	position: relative;
}
#msform fieldset {
	background: white;
	border: 0 none;
	border-radius: 3px;
	box-shadow: 0 0 15px 1px rgba(0, 0, 0, 0.4);
	padding: 20px 30px;
	box-sizing: border-box;
	width: 80%;
	margin: 0 10%;
	
	/*stacking fieldsets above each other*/
	position: relative;
}
/*Hide all except first fieldset*/
#msform fieldset:not(:first-of-type) {
	display: none;
}
/*inputs*/
#msform input, #msform textarea {
	padding: 15px;
	border: 1px solid #ccc;
	border-radius: 3px;
	margin-bottom: 10px;
	width: 100%;
	box-sizing: border-box;
	font-family: montserrat;
	color: #2C3E50;
	font-size: 13px;
}
/*buttons*/
#msform .action-button {
	width: 100px;
	background: #27AE60;
	font-weight: bold;
	color: white;
	border: 0 none;
	border-radius: 1px;
	cursor: pointer;
	padding: 10px 5px;
	margin: 10px 5px;
}
#msform .action-button:hover, #msform .action-button:focus {
	box-shadow: 0 0 0 2px white, 0 0 0 3px #27AE60;
}
/*headings*/
.fs-title {
	font-size: 15px;
	text-transform: uppercase;
	color: #2C3E50;
	margin-bottom: 10px;
}
.fs-subtitle {
	font-weight: normal;
	font-size: 13px;
	color: #666;
	margin-bottom: 20px;
}
/*progressbar*/
#progressbar {
	margin-bottom: 30px;
	overflow: hidden;
	/*CSS counters to number the steps*/
	counter-reset: step;
}
#progressbar li {
	list-style-type: none;
	color: white;
	text-transform: uppercase;
	font-size: 9px;
	width: 33.33%;
	float: left;
	position: relative;
}
#progressbar li:before {
	content: counter(step);
	counter-increment: step;
	width: 20px;
	line-height: 20px;
	display: block;
	font-size: 10px;
	color: #333;
	background: white;
	border-radius: 3px;
	margin: 0 auto 5px auto;
}
/*progressbar connectors*/
#progressbar li:after {
	content: '';
	width: 100%;
	height: 2px;
	background: white;
	position: absolute;
	left: -50%;
	top: 9px;
	z-index: -1; /*put it behind the numbers*/
}
#progressbar li:first-child:after {
	/*connector not needed before the first step*/
	content: none; 
}
/*marking active/completed steps green*/
/*The number of the step and the connector before it = green*/
#progressbar li.active:before,  #progressbar li.active:after{
	background: #27AE60;
	color: white;
}
/* skip button (currently muted) */
#msform .skip {
	width: 50px;
	background: rgb(184, 184, 184);
	font-size: 0.4em;
	color: white;
	border: 0 none;
	border-radius: 5px;
	position: absolute;
	left: 62%;
	bottom: 0%;
	cursor: pointer;
	padding: 5px 2px;
	margin: 5px 2px;
}

/*
	SPECIFIC STYLES
*/


/* Step 1 */

/*
	PASSWORD STRENGTH METER
*/

#passwd-cont {
	display: flex;
	flex-direction: column;
	margin-bottom: 10px;
}
#msform .passwd {
	margin-bottom: 0;
}
.passwdButton {
	position: absolute;
	right: 10%;
	top: 65%;
	background: #727272;
  	color: white;
  	padding: 4px 8px;
  	border-radius: 4px;
  	font-weight: 700;
	font-size: .4em;
	cursor: pointer;
}
.passwdStrength {
	position: relative;
	height: 5px;
	top: -3%;  
  	background: transparent;
  	transition: all 300ms ease-in-out;
}
.passwdStrength[data-score="null"] {
	width: 0;
	background: red;
}
.passwdStrength[data-score="0"] {
	width: 5%;
	background: #F44336;
}
.passwdStrength[data-score="1"] {
	width: 25%;
	background: #F44336;
}
.passwdStrength[data-score="2"] {
	width: 50%;
	background: #FFEB3B;
}
.passwdStrength[data-score="3"] {
	width: 75%;
	background: #4CAF50;
}
.passwdStrength[data-score="4"] {
	width: 100%;
	background: #4CAF50;
}

/* Step 2 */
#birthdate::-webkit-inner-spin-button { 
	display: none; 
}
.genderGroup {
	display: flex;
	flex-direction: row;
	justify-content: center;
}
#sexualOrient {
	display: flex;
	flex-direction: column;
	justify-content: center;
}

/* Radio buttons custom */
input[type="radio"] {
	position: absolute;
	opacity: 0;
	z-index: -2;
}
label {
	position: relative;
	font-size: 0.5em;
	margin-right: 1em;
	padding-left: 2em;
	padding-right: 0.5em;
	line-height: 2;
	cursor: pointer;
	padding-top: 0.15em;
	margin-bottom: 1%;
	z-index: 1000;
}
label:before {
	box-sizing: border-box;
	content: " ";
	position: absolute;
	top: 0.2em;
	left: 5%;
	display: block;
	width: 1.4em;
	height: 1.4em;
	border: 1px solid black;
	border-radius: .25em;
	/* z-index: -1; */
}  
input[type="radio"] + label::before {
	border-radius: 1em;
}
input[type="radio"]:checked + label {
	padding-left: 1.5em;
	padding-right: 1em;
	color: white;
}
input[type="radio"]:checked + label:before {
	top: 0;
	width: 100%;
	height: 2vh;
	background: #27AE60;
	border: 1px solid #27AE60;
	z-index: -1;
}  
/* Transition */
label,
label::before {
	transition: .25s all ease;
}

/* Step 3 */

/*
	RANGE & SLIDER
*/
.questionsS3 {
	font-size: 0.7em;
	position: relative;
}
.step3 {
	margin-top: 5%; 
}
.values {
	font-size: 0.6em;
	font-family: 'ComfortaaLight', cursive;
	text-align: end;
}

/* 
	TAGS 
*/

div.ReactTags__tags {
	position: relative;
	margin-top: 3%;
}

/* Styles for the input */
div.ReactTags__tagInput {
    width: 50%;
    border-radius: 2px;
    display: inline-block;
}
div.ReactTags__tagInput input.ReactTags__tagInputField,
div.ReactTags__tagInput input.ReactTags__tagInputField:focus {
    height: 1vh;
    margin: 0;
    font-size: 0.5em;
    width: 100%;
    border: 1px solid #eee;
    padding: 0 4px;
}

/* Styles for selected tags */
div.ReactTags__selected span.ReactTags__tag {
    border: 1px solid #ddd;
    background: #eee;
    font-size: 0.5em;
    display: inline-block;
    padding: 6px;
    margin: 0 5px 5px 5px;
	cursor: default !important;
    border-radius: 2px;
}
div.ReactTags__selected span.ReactTags__tag:hover {
	background: #27AE60;
	border: 1px solid rgba(39, 174, 95, 0.877);
	color: white;
}
div.ReactTags__selected span.ReactTags__tag:hover a.ReactTags__remove {
	color: white;
}
div.ReactTags__selected a.ReactTags__remove {
    color: #9c9c9c;
    margin-left: 5px;
    cursor: pointer;
}
div.ReactTags__selected span.ReactTags__tag:hover a.ReactTags__remove:hover {
	color: rgb(219, 58, 58);
}

/* Styles for suggestions */
div.ReactTags__suggestions {
    position: absolute;
    color: #000 !important;
    font-weight: normal !important;
    font-size: 0.5em !important;
}
div.ReactTags__suggestions ul {
    list-style-type: none;
    box-shadow: .05em .01em .5em rgba(0,0,0,.2);
    background: white;
    width: 130%;
}
div.ReactTags__suggestions li {
    border-bottom: 1px solid #ddd;
    padding: 15px 10px;
    margin: 0;
}
div.ReactTags__suggestions li mark {
    text-decoration: underline;
    background: none;
    font-weight: 600;
}
div.ReactTags__suggestions ul li.ReactTags__activeSuggestion {
    background: #b7cfe0;
    cursor: pointer;
}
